[project]
authors = ["Olivier Roussel <olivier.roussel@inria.fr>"]
channels = ["https://prefix.dev/conda-forge"]
description = "Open-source framework for interactive mechanical simulation, with emphasis on biomechanics and robotics"
name = "SOFA"
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]
version = "25.06.99"
license = "LGPL-2.1-or-later"
license-file = "LICENSE-LGPL.md"

# TODO: add ccache support
[build-dependencies]
cxx-compiler = ">=1.7.0"
cmake = ">=3.22"
ninja = ">=1.11"
pkg-config = "*"
git = ">=2.47.0"

[target.win-64.build-dependencies]
vs2022_win-64 = ">=19.42.0"

[dependencies]
libboost-headers = ">=1.76.0"
zlib = ">=1.2.11"
eigen = ">=3.4.0"
tinyxml2 = ">=9.0.0"
cxxopts = ">=3.1.1"
gtest = "*"

[activation]
scripts = ["development/scripts/pixi/activation.sh"]

[target.win-64.activation]
scripts = ["development/scripts/pixi/activation.bat"]

[tasks]

build = { cmd = "cmake --build $SOFA_BUILD_DIR --target all --parallel 8", depends-on = ["configure"] }
clean = { cmd = "rm -rf $SOFA_BUILD_DIR" }
test = { cmd = "ctest --test-dir $SOFA_BUILD_DIR --output-on-failure", depends-on = ["build"] }

# TODO: add run-regression-tests feature

# TODO: add build-release-package feature

# --------------------------------

[feature.plugin-sofa-python3]
dependencies = { numpy = ">=1.22.0", python = ">=3.9.0", pybind11 = ">=2.3.0" }
activation = { env = { SOFA_PLUGIN_PYTHON3_ARGS = "-DPLUGIN_SOFAPYTHON3=ON -DSOFA_FETCH_SOFAPYTHON3=ON -DPython_EXECUTABLE=$SOFA_PYTHON_EXECUTABLE -DPython_FIND_STRATEGY=LOCATION" } }

[feature.qt-gui]
activation = { env = { Qt5_DIR = "$CONDA_PREFIX/lib/cmake" } }
dependencies = { qt-main = ">=5.15.0", ffmpeg = "*", libqglviewer = "*" }

[feature.plugin-cuda]
system-requirements = { cuda = "12" }
[feature.plugin-cuda.target.linux]
# XXX Adding nvvm/bin to PATH was required to compile, may be related to
# https://github.com/conda-forge/cuda-nvcc-impl-feedstock/issues/9
activation = { env = { PATH = "$CONDA_PREFIX/nvvm/bin:$PATH", SOFA_PLUGIN_SOFACUDA_ARGS = "-DPLUGIN_SOFACUDA=ON -DSOFACUDA_ENABLE_NATIVE_ARCHITECTURE=ON" } }
dependencies = { cuda-version = "*", cuda-compiler = "*" }
[feature.plugin-cuda.target.win]
activation = { env = { SOFA_PLUGIN_SOFACUDA_ARGS = "-DPLUGIN_SOFACUDA=ON -DSOFACUDA_ENABLE_NATIVE_ARCHITECTURE=ON" } }
dependencies = { cuda-version = "*", cuda-compiler = "*" }
[feature.plugin-cuda.target.osx]
activation = { env = { SOFA_PLUGIN_SOFACUDA_ARGS = "-DPLUGIN_SOFACUDA=OFF -DPLUGIN_BEAMADAPTER_CUDA=OFF -DPLUGIN_SOFADISTANCEGRID_CUDA=OFF -DPLUGIN_SOFASPHFLUID_CUDA=OFF -DPLUGIN_SOFTROBOTS_CUDA=OFF" } }

[feature.plugin-cgal]
dependencies = { cgal-cpp = "*", gmp = "*" }

[feature.presets-defaultGUI]
dependencies = { glew = "*", glfw = "*", nativefiledialog-extended = "*"}
[feature.presets-defaultGUI.target.linux]
dependencies = { libglu = "*" }
[feature.presets-defaultGUI.target.linux-64]
dependencies = { mesa-libgl-devel-cos7-x86_64 = "*" }

[feature.presets-conda-core.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "conda-core"] }

[feature.presets-minimal.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "minimal"] }

[feature.presets-standard.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "standard",
  "$SOFA_PLUGIN_PYTHON3_ARGS"] }

[feature.presets-supported-plugins.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_VERBOSE_MAKEFILE=ON",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "supported-plugins",
  "$SOFA_PLUGIN_PYTHON3_ARGS",
  "$SOFA_PLUGIN_SOFACUDA_ARGS"] }

[feature.presets-full.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_VERBOSE_MAKEFILE=ON",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "-DPLUGIN_SOFACUDA=$SOFA_PLUGIN_SOFACUDA",
  "-DSOFACUDA_ENABLE_NATIVE_ARCHITECTURE=ON",
  "--preset",
  "full",
  "$SOFA_PLUGIN_PYTHON3_ARGS",
  "$SOFA_PLUGIN_SOFACUDA_ARGS"] }

[feature.presets-minimal-dev.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "minimal-dev"] }

[feature.presets-standard-dev.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "standard-dev",
  "$SOFA_PLUGIN_PYTHON3_ARGS"] }

[feature.presets-supported-plugins-dev.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "supported-plugins-dev",
  "$SOFA_PLUGIN_PYTHON3_ARGS",
  "$SOFA_PLUGIN_SOFACUDA_ARGS"] }

[feature.presets-full-dev.tasks]
configure = { cmd = [ "cmake",
  "-G",
  "Ninja",
  "-B",
  "$SOFA_BUILD_DIR",
  "-S",
  ".",
  "-DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX",
  "-DCMAKE_BUILD_TYPE=$SOFA_BUILD_TYPE",
  "--preset",
  "full-dev",
  "$SOFA_PLUGIN_PYTHON3_ARGS",
  "$SOFA_PLUGIN_SOFACUDA_ARGS"] }  

[environments]
conda-core = { features = ["presets-conda-core"] }
minimal = { features = ["presets-minimal"] }
minimal-dev = { features = ["presets-minimal-dev"] }
standard = { features = ["presets-standard", "plugin-sofa-python3", "presets-defaultGUI"] }
standard-dev = { features = ["presets-standard-dev", "plugin-sofa-python3", "presets-defaultGUI"] }
supported-plugins = { features = [
  "presets-supported-plugins",
  "plugin-sofa-python3",
  "plugin-cgal",
  "plugin-cuda",
  "presets-defaultGUI",
  "qt-gui"]}
supported-plugins-dev = { features = [
  "presets-supported-plugins-dev",
  "plugin-sofa-python3",
  "plugin-cgal",
  "plugin-cuda",
  "presets-defaultGUI",
  "qt-gui"]}  
full = { features = [
  "presets-full",
  "plugin-sofa-python3",
  "plugin-cgal",
  "plugin-cuda",
  "presets-defaultGUI",
  "qt-gui"]}
full-dev = { features = [
  "presets-full-dev",
  "plugin-sofa-python3",
  "plugin-cgal",
  "plugin-cuda",
  "presets-defaultGUI",
  "qt-gui"]}

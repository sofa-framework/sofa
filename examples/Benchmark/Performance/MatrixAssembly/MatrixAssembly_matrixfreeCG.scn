<!--
This scene belongs to a collection of similar scenes of a cantilever beam modeled
with tetrahedra and solved with a backward Euler integration scheme.
The differences are in the way the global system matrix is built and solved:
* MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built
* MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built
* MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built
* MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built
* MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built
-->

<Node name="root" gravity="-1.8 0 100" dt="0.001">
    <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint] -->
    <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshGmshLoader MeshOBJLoader] -->
    <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->
    <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [BarycentricMapping] -->
    <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [MeshMatrixMass] -->
    <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->
    <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- Needed to use components [TetrahedronFEMForceField] -->
    <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms TetrahedronSetTopologyContainer] -->
    <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/> <!-- Needed to use components [OglModel] -->
    <DefaultAnimationLoop/>

    <Node name="DeformableObject">

        <EulerImplicitSolver name="odeImplicitSolver" />

        <!--
            Iterative linear solver using the template parameter GraphScattered by default.
            It means the global matrix system is not built explicitly. Instead, the solver
            asks the force fields to perform directly the matrix-vector multiplications required
            by the Conjugate Gradient algorithm.
         -->
        <CGLinearSolver iterations="1000" tolerance="1e-9" threshold="1e-9"/>

        <MeshGmshLoader name="loader" filename="mesh/truthcylinder1.msh" />
        <TetrahedronSetTopologyContainer src="@loader" name="topologyContainer"/>
        <TetrahedronSetGeometryAlgorithms name="geomAlgo"/>
        <MechanicalObject name="dofs" src="@loader"/>
        <MeshMatrixMass totalMass="15" topology="@topologyContainer"/>

        <FixedProjectiveConstraint indices="0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 268 269 270 271 343 345" />
        <TetrahedronFEMForceField name="FEM" youngModulus="1000" poissonRatio="0.49" method="large" />

        <Node>
            <MeshOBJLoader name="meshLoader_0" filename="mesh/truthcylinder1.obj" handleSeams="0" />
            <OglModel name="Visual" src="@meshLoader_0" color="red"/>
            <BarycentricMapping input="@../dofs" output="@Visual" />
        </Node>
    </Node>
</Node>

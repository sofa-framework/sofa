<?xml version="1.0" ?>
<Node name="root" gravity="0 -9.81 0" dt="0.02">

    <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [DiscreteIntersection] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Geometry"/> <!-- Needed to use components [SphereCollisionModel] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [CollisionResponse] -->  
    <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint] -->  
    <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshGmshLoader,MeshOBJLoader,SphereLoader] -->  
    <RequiredPlugin name="Sofa.Component.LinearSolver.Direct"/> <!-- Needed to use components [EigenSimplicialLDLT] -->  
    <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [BarycentricMapping] -->  
    <RequiredPlugin name="Sofa.Component.Mapping.NonLinear"/> <!-- Needed to use components [VolumeMapping] -->  
    <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [DiagonalMass] -->  
    <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->  
    <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- Needed to use components [TetrahedralCorotationalFEMForceField] -->  
    <RequiredPlugin name="Sofa.Component.SolidMechanics.Spring"/> <!-- Needed to use components [RestShapeSpringsForceField] -->  
    <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->  
    <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms,TetrahedronSetTopologyContainer] -->  
    <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/>

    <CollisionPipeline name="CollisionPipeline" />
    <DefaultAnimationLoop/>
    <BruteForceBroadPhase/>
    <BVHNarrowPhase/>
    <CollisionResponse name="collision response" response="PenalityContactForceField"/>
    <DiscreteIntersection/>

    <MeshOBJLoader name="LiverSurface" filename="mesh/liver-smooth.obj"/>

    <Node name="Liver" gravity="0 -9.81 0">
        <EulerImplicitSolver name="cg_odesolver" rayleighStiffness="0.1" rayleighMass="0.1"/>
        <EigenSimplicialLDLT template="CompressedRowSparseMatrixMat3x3d"/>
        <MeshGmshLoader name="meshLoader" filename="mesh/liver.msh"/>
        <TetrahedronSetTopologyContainer name="topo" src="@meshLoader"/>
        <MechanicalObject name="dofs" src="@meshLoader"/>
        <TetrahedronSetGeometryAlgorithms template="Vec3" name="GeomAlgo"/>
        <DiagonalMass name="computed using mass density" massDensity="1"/>
        <TetrahedralCorotationalFEMForceField template="Vec3" name="FEM" method="large" poissonRatio="0.3"
                                              youngModulus="3000" computeGlobalMatrix="0"/>
        <FixedProjectiveConstraint name="FixedProjectiveConstraint" indices="3 39 64"/>
        <Node name="constraintSpace">
            <MechanicalObject template="Vec1" name="volumeDoFs"/>
            <VolumeMapping name="volumeMapping" topology="@../topo" geometricStiffness="Exact" applyRestPosition="true"/>
            <RestShapeSpringsForceField template="Vec1" stiffness="15000"/>
        </Node>
        <Node name="Visu" tags="Visual" gravity="0 -9.81 0">
            <OglModel name="VisualModel" src="@../../LiverSurface"/>
            <BarycentricMapping name="visual mapping" input="@../dofs" output="@VisualModel"/>
        </Node>
        <Node name="Surf" gravity="0 -9.81 0">
            <SphereLoader filename="mesh/liver.sph"/>
            <MechanicalObject name="spheres" position="@[-1].position"/>
            <SphereCollisionModel name="CollisionModel" listRadius="@[-2].listRadius"/>
            <BarycentricMapping name="sphere mapping" input="@../dofs" output="@spheres"/>
        </Node>
    </Node>
</Node>

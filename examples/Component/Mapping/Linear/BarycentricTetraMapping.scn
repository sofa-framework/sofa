<!-- Mechanical MassSpring Group Basic Example -->
<Node name="root" dt="0.05" showBoundingTree="0" gravity="0 -9 1">
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase BruteForceBroadPhase CollisionPipeline] -->
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [MinProximityIntersection] -->
    <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [CollisionResponse] -->
    <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint] -->
    <RequiredPlugin name="Sofa.Component.Engine.Select"/> <!-- Needed to use components [BoxROI] -->
    <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshOBJLoader] -->
    <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->
    <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [BarycentricMapping] -->
    <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [DiagonalMass] -->
    <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->
    <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- Needed to use components [TetrahedronFEMForceField] -->
    <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms TetrahedronSetTopologyContainer TetrahedronSetTopologyModifier] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Grid"/> <!-- Needed to use components [RegularGridTopology] -->
    <RequiredPlugin name="Sofa.Component.Topology.Mapping"/> <!-- Needed to use components [Hexa2TetraTopologicalMapping] -->
    <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [VisualStyle] -->
    <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/> <!-- Needed to use components [OglModel] -->
    <VisualStyle displayFlags="showVisual showBehaviorModels showMappings" />
    <CollisionPipeline verbose="0" />
    <BruteForceBroadPhase/>
    <BVHNarrowPhase/>
    <CollisionResponse response="PenalityContactForceField" />
    <MinProximityIntersection name="Proximity" alarmDistance="0.8" contactDistance="0.5" />
    <DefaultAnimationLoop/>
    
    <Node name="MeshVolume" >
        <RegularGridTopology name="HexaTop" n="7 7 7" min="-10 0 -10" max="10 20 10" />
        <TetrahedronSetTopologyContainer name="Container" position="@HexaTop.position" />
        <TetrahedronSetTopologyModifier name="Modifier"/>
        <Hexa2TetraTopologicalMapping input="@HexaTop" output="@Container" swapping="false" />
    </Node>

    
    <Node name="Deformable">
        <EulerImplicitSolver name="cg_odesolver" printLog="false"  rayleighStiffness="0.1" rayleighMass="0.1" />
        <CGLinearSolver iterations="25" name="linear solver" tolerance="1.0e-9" threshold="1.0e-9" />

        <TetrahedronSetTopologyContainer name="Container" src="@../MeshVolume/Container" />
        <TetrahedronSetTopologyModifier name="Modifier" />
        <TetrahedronSetGeometryAlgorithms name="GeomAlgo"  template="Vec3" />
        
        <MechanicalObject />
        <DiagonalMass massDensity="10.0" />
        <TetrahedronFEMForceField youngModulus="4000" poissonRatio="0.45" />
        <BoxROI name="box" box="-10 19 -10 10 21 10" drawBoxes="true" />
        <FixedProjectiveConstraint  name="FixedProjectiveConstraint" indices="@box.indices" activate_projectVelocity="1"/>
     
        <Node name="Visu">
            <MeshOBJLoader name="meshLoader_3" filename="mesh/torus.obj" handleSeams="1" translation="0 10 0" scale3d="4 4 4" />
            <OglModel name="Visual" src="@meshLoader_3" color="red" />
            <BarycentricMapping input="@.." output="@Visual" />
        </Node>
    </Node>
</Node>

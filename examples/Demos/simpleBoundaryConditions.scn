<!--Decompose a hexahedral grid in tetrahedra and triangles, then stretch the object using a TrianglePressureForceField -->

<Node name="SimpleBoundaryConditions demo" gravity="0 0 0" dt="0.1">
    <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [LineProjectiveConstraint PlaneProjectiveConstraint PointProjectiveConstraint] -->
    <RequiredPlugin name="Sofa.Component.Engine.Select"/> <!-- Needed to use components [BoxROI] -->
    <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->
    <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [UniformMass] -->
    <RequiredPlugin name="Sofa.Component.MechanicalLoad"/> <!-- Needed to use components [TrianglePressureForceField] -->
    <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->
    <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- Needed to use components [TetrahedronFEMForceField] -->
    <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms TetrahedronSetTopologyContainer TetrahedronSetTopologyModifier TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Grid"/> <!-- Needed to use components [RegularGridTopology] -->
    <RequiredPlugin name="Sofa.Component.Topology.Mapping"/> <!-- Needed to use components [Hexa2TetraTopologicalMapping Tetra2TriangleTopologicalMapping] -->
    <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [VisualStyle] -->
    <DefaultAnimationLoop/>
    
    <VisualStyle displayFlags="showBehavior hideVisual" />
    <Node name="Cube grid" >
        <EulerImplicitSolver name="cg_odesolver" printLog="0"  rayleighStiffness="0.1" rayleighMass="0.1" />
        <CGLinearSolver template="GraphScattered" name="linear solver" iterations="25" tolerance="1e-05" threshold="1e-05" />

        <!--Subdivided cube-->
        <RegularGridTopology name="grid" n="5 5 5" min="0 0 0" max="1 1 1"  />
        <MechanicalObject name="DOF" template="Vec3" />
        <UniformMass totalMass="1" />

        <!--maintain point (0,0,0) fixed -->
        <BoxROI template="Vec3" name="O_box_roi" box="-0.01 -0.01 -0.01   0.01 0.01 0.01  "  drawPoints="1" drawSize="30" />
        <PointProjectiveConstraint point="0 0 0" indices="@[-1].indices" />

        <!--constrain point (0,1,0) to the y axis -->
        <BoxROI template="Vec3" name="Oy_line_box_roi" box="-0.01 0.99 -0.01   0.01 1.01 0.01  "  drawPoints="1" drawSize="30" />
        <LineProjectiveConstraint origin="0 0 0" direction="0 1 0" indices="@[-1].indices" />

        <!--constraint face x=0 to stay in this plane-->
        <BoxROI template="Vec3" name="Oyz_plane_box_roi" box="-0.01 -0.01 -0.01   0.01 1.01 1.01  " drawBoxes="1" drawSize="1" />
        <PlaneProjectiveConstraint normal="1 0 0" indices="@[-1].indices" />


        <!--Decomposition of the cubes in tetrahedra, with tetrahedral FEM -->
        <Node name="Tetra" >
            <TetrahedronSetTopologyContainer name="TetraContainer" />
            <TetrahedronSetTopologyModifier />
            <TetrahedronSetGeometryAlgorithms template="Vec3" />
            <Hexa2TetraTopologicalMapping name="default28" input="@grid" output="@TetraContainer" />
            <TetrahedronFEMForceField template="Vec3" name="FEM" method="large" poissonRatio="0.4" youngModulus="1000" />

            <!--Extraction of the external triangles of the tetrahedra -->
            <Node name="Triangles" >
                <TriangleSetTopologyContainer name="TriangleContainer" />
                <TriangleSetTopologyModifier />
                <TriangleSetGeometryAlgorithms template="Vec3" />
                <Tetra2TriangleTopologicalMapping input="@TetraContainer" output="@TriangleContainer" />

                <!--Apply a pressure to the triangles in the x=1 plane -->
                <BoxROI name="pressureROI" position="@../../DOF.position" triangles="@TriangleContainer.triangles" box="0.99 -0.01 -0.01   1.01 1.01 1.01" drawBoxes="1"/>
                <TrianglePressureForceField name="PFF" triangleList="@pressureROI.triangleIndices" pressure="100 0 0"  showForces="1"/>
            </Node>
        </Node>
    </Node>
</Node>
